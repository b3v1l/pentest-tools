package main

import (
	"fmt"
	"log"
	"os"
)

type fooReader struct{}
type fooWriter struct{}

func (fooReader *fooReader) Read(b []byte) (int, error) {

	fmt.Print("in> ")
	return os.Stdin.Read(b)
}

func (fooWriter *fooWriter) Write(b []byte) (int, error) {

	fmt.Print("out> ")
	return os.Stdout.Write((b))
}

func main() {

	var (
		reader fooReader
		writer fooWriter
	)

	data := make([]byte, 4096)
	i, err := reader.Read(data)
	if err != nil {
		log.Fatalln("Unable to read data\n")
	}
	fmt.Printf("Read %d bytes\n", i)

	i, err = writer.Write(data)
	if err != nil {
		log.Fatalln("Unable to write data\n")
	}
	fmt.Printf("Wrote %d bytes\n", data)

}
