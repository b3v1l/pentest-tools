package main

import (
	"bufio"
	"io"
	"log"
	"net"
)

// bad method
func echo(conn net.Conn) {
	defer conn.Close()

	b := make([]byte, 512)
	for {

		n, err := conn.Read(b)
		if err != nil {
			log.Println("Unexpected error")
			break
		}
		if err == io.EOF {
			log.Println("Client disconnected")
			break
		}
		log.Printf("Received %d bytes: %s ", n, string(b))

		if _, err := conn.Write(b[:0]); err != nil {
			log.Fatalln("Cannot write data")
		}
	}

}

// echo using bufio

func echobuf(conn net.Conn) {

	defer conn.Close()

	reader := bufio.NewReader(conn)
	s, err := reader.ReadString('\n')
	if err != nil {
		log.Fatalln("Cannot read data")
	}
	log.Printf("Received %d bytes : %s", len(s), s)

	writer := bufio.NewWriter(conn)
	if _, err := writer.WriteString(s); err != nil {
		log.Fatalln("Writing data error")
	}
	writer.Flush()
}

// Copy function - same as before
func echocopy(conn net.Conn) {

	defer conn.Close()

	if _, err := io.Copy(conn, conn); err != nil {
		log.Fatalln("Cannot write data")
	}
	log.Printf("Received %d bytes: %s", len())

}

func main() {

	l, err := net.Listen("tcp", ":1337")
	if err != nil {
		log.Fatalln("Connection failure\n")
	}
	log.Println("Listening on 0.0.0.0:1337")

	for {
		conn, err := l.Accept()
		if err != nil {
			log.Fatalln("Connection error")
		}
		log.Println("Received connection")

		go echocopy(conn)
	}
}
